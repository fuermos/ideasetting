<application>
  <component name="AppStorage">
    <option name="newTranslationDialogWidth" value="560" />
    <option name="newTranslationDialogX" value="397" />
    <option name="newTranslationDialogY" value="361" />
    <histories>
      <item value="Could not transfer metadata com.uqian.cactus:uqian-framework-build:0.0.8-SNAPSHOT/maven-metadata.xml from/to uqian-nexus-releases (http://101.200.172.206:8081/repository/maven-releases/): Failed to transfer file: http://101.200.172.206:8081/repository/maven-releases/com/uqian/cactus/uqian-framework-build/0.0.8-SNAPSHOT/maven-metadata.xml. Return code is: 400 , ReasonPhrase:Repository version policy: RELEASE does not allow metadata in path:" />
      <item value="platform " />
      <item value="Business " />
      <item value="Business platform" />
      <item value="A resolution-independent provider of current timestamps and elapsed time calculator." />
      <item value="A resolution-independent provider of current time-stamps and elapsed time calculations." />
      <item value="Body is replaced (injected) by JavassistProxyFactory" />
      <item value="connection was evicted)" />
      <item value="A thread-safe variant of java.util.ArrayList in which all mutative operations (add, set, and so on) are implemented by making a fresh copy of the underlying array.&#10;This is ordinarily too costly, but may be more efficient than alternatives when traversal operations vastly outnumber mutations, and is useful when you cannot or don't want to synchronize traversals, yet need to preclude interference among concurrent threads. The &quot;snapshot&quot; style iterator method uses a reference to the state of the array at the point that the iterator was created. This array never changes during the lifetime of the iterator, so interference is impossible and the iterator is guaranteed not to throw ConcurrentModificationException. The iterator will not reflect additions, removals, or changes to the list since the iterator was created. Element-changing operations on iterators themselves (remove, set, and add) are not supported. These methods throw UnsupportedOperationException.&#10;All elements are permitted, including null.&#10;Memory consistency effects: As with other concurrent collections, actions in a thread prior to placing an object into a CopyOnWriteArrayList happen-before actions subsequent to the access or removal of that element from the CopyOnWriteArrayList in another thread.&#10;This class is a member of the Java Collections Framework." />
      <item value="Determines if the class or interface represented by this Class object is either the same as, or is a superclass or superinterface of, the class or interface represented by the specified Class parameter. It returns true if so; otherwise it returns false. If this Class object represents a primitive type, this method returns true if the specified Class parameter is exactly this Class object; otherwise it returns false.&#10;Specifically, this method tests whether the type represented by the specified Class parameter can be converted to the type represented by this Class object via an identity conversion or via a widening reference conversion. See The Java Language Specification, sections 5.1.1 and 5.1.4 , for details.&#10;Params:&#10;cls – the Class object to be checked&#10;Returns:&#10;the boolean value indicating whether objects of the type cls can be assigned to objects of this class&#10;Throws:&#10;NullPointerException – if the specified Class parameter is null." />
      <item value="Checks whether an object is an instance of given type without throwing exception when the class is not loaded. @param obj the object to check @param className String class @return true if object is assignable from the type, false otherwise or when the class cannot be loaded" />
      <item value="基数" />
      <item value=" User-space table qualifiers can only contain 'alphanumeric characters" />
      <item value="GREATER" />
      <item value="  /**&#10;   * Set whether entire row should be filtered if column is not found.&#10;   * &lt;p&gt;&#10;   * If true, the entire row will be skipped if the column is not found.&#10;   * &lt;p&gt;&#10;   * If false, the row will pass if the column is not found.  This is default.&#10;   * @param filterIfMissing flag&#10;   */" />
      <item value="increase" />
      <item value="增加" />
      <item value="自增" />
      <item value="z" />
      <item value="唯一" />
      <item value="only" />
      <item value="single" />
      <item value="sing" />
      <item value="单" />
      <item value="单例" />
      <item value="da" />
      <item value="s" />
      <item value="重复" />
      <item value="快速统计" />
      <item value="快速" />
      <item value="百分比" />
      <item value="百分" />
      <item value="Analysys" />
      <item value="Regex" />
      <item value="表达式" />
      <item value="逻辑计算" />
      <item value="逻辑" />
      <item value="逻辑判断" />
      <item value="验证计" />
      <item value="验证计算" />
      <item value="验证" />
      <item value="计算" />
      <item value="Returns &lt;tt&gt;true&lt;tt&gt; if this set contains the specified element. More formally, returns &lt;tt&gt;true&lt;tt&gt; if and only if this set contains an element &lt;tt&gt;e&lt;tt&gt; such that &lt;tt&gt;(o==null&amp;nbsp;?&amp;nbsp;e==null&amp;nbsp;:&amp;nbsp;o.equals(e))&lt;tt&gt;. @param o element whose presence in this set is to be tested @return &lt;tt&gt;true&lt;tt&gt; if this set contains the specified element @throws ClassCastException if the type of the specified element is incompatible with this set (&lt;a href=&quot;Collection.htmloptional-restrictions&quot;&gt;optional&lt;a&gt;) @throws NullPointerException if the specified element is null and this set does not permit null elements (&lt;a href=&quot;Collection.htmloptional-restrictions&quot;&gt;optional&lt;a&gt;)" />
    </histories>
    <option name="languageScores">
      <map>
        <entry key="CHINESE" value="2" />
        <entry key="ENGLISH" value="3" />
      </map>
    </option>
  </component>
  <component name="Cache">
    <option name="lastTrimTime" value="1614752769581" />
  </component>
</application>